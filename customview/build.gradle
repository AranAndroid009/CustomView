apply plugin:  'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin:'kotlin-android'
apply plugin: 'maven'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

group = 'com.github.AranAndroid009'


////声明变量记录上传Maven库地址
//def repositoryUrl
////判断发到正式库还是snapshot库
//if (isReleaseBuild()) {
//    println 'Release Build'
//    //上传Release私有仓库
//    repositoryUrl = 'http://10.1.1.9:8081/repository/maven-releases/'
//} else {
//    println 'Debug Build'
//    //上传snapshot私有仓库
//    repositoryUrl = 'http://10.1.1.9:8081/repository/maven-snapshots/'
//}
////从项目gradle.properties中读取Nexus服务器登录用户名
//def getRepositoryUserName() {
//    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
//}
////读取Nexus服务器登录密码
//def getRepositoryPassword() {
//    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
//}
////通过gradle.properties中VERSION_NAME常量判断是否是Release版本
//def isReleaseBuild() {
//    return !VERSION_NAME.contains("SNAPSHOT")
//}
//uploadArchives {
//    repositories {
//        mavenDeployer {
//            pom.groupId = POM_GROUP_ID
//            pom.artifactId = VERSION_NAME
//            pom.version = VERSION_NAME
//            pom.packaging = POM_PACKAGING
//            repository(url: repositoryUrl) {
//                authentication(userName: getRepositoryUserName(), password: getRepositoryPassword())
//                println POM_GROUP_ID
//                println repositoryUrl
//                println getRepositoryUserName()
//                println getRepositoryPassword()
//            }
//        }
//    }
//}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures{
        dataBinding = true // for data binding
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'com.blankj:utilcodex:1.30.6'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // 基础依赖包，必须要依赖
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'
    // fragment快速实现（可选）
    implementation 'com.gyf.immersionbar:immersionbar-components:3.0.0'
    // kotlin扩展（可选）
    implementation 'com.gyf.immersionbar:immersionbar-ktx:3.0.0'

    def lifecycle_version = "2.0.0"
    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

}